name: Test Coverage
on:
  pull_request:
  push:
    branches:
      - v0.34.x-celestia

jobs:
  build-linux:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goarch: ["arm", "amd64"]
    timeout-minutes: 5
    env:
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: install
        run: GOOS=linux GOARCH=${{ matrix.goarch }} make build
        if: env.GIT_DIFF

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: test & coverage report creation
        run: go test ./... -mod=readonly -timeout 15m -race -coverprofile=profile.out -covermode=atomic
        if: env.GIT_DIFF
      - uses: actions/upload-artifact@v4
        with:
          name: "${{ github.sha }}-coverage"
          path: ./profile.out

  upload-coverage-report:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/download-artifact@v4.1.8
        with:
          name: "${{ github.sha }}-coverage"
        if: env.GIT_DIFF
      - run: |
          cat ./profile.out | grep -v "mode: atomic" >> coverage.txt
        if: env.GIT_DIFF
      - uses: codecov/codecov-action@v5
        with:
          files: ./coverage.txt
        if: env.GIT_DIFF
